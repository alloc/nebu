const { KEYS } = require('eslint-visitor-keys')
const dedent = require('dedent')
const fs = require('fs')

let lines = [
  '// Generated by ../scripts/extractTypeGuards.js',
  'import { Any } from "@alloc/types"',
  'import { ESTree } from "meriyah"',
  'import { Node } from "./Node"',
  '',
  'type SpecificNode<T, NodeType extends keyof TypeLookup> = [T] extends [Any] ? Extract<TypeLookup[NodeType], T> : Extract<T, { type: NodeType }>',
  '',
  'declare module "./Node" {',
  'export namespace Node {',
]

let append = text => lines.push('  ' + dedent(text))

const lookup = []
const guards = []
const staticGuards = []

for (let type in KEYS) {
  if (type.startsWith('Experimental')) {
    continue
  }

  lookup.push(`
    ${type}: Node.${type}
  `)
  staticGuards.push(`
    is${type}<T>(arg: T): arg is SpecificNode<T, "${type}">
  `)

  if (type == 'Literal') {
    continue
  }

  append(`
    export interface ${type} extends Node<ESTree.${type}> {}
  `)
  guards.push(`
    is${type}(): this is Node.${type}
  `)
}

lines.push('}}', '')

lines.push('export interface TypeLookup {')
lookup.forEach(append)
lines.push('}', '')

lines.push('export interface TypeGuards {')
guards.forEach(append)
lines.push('}', '')

lines.push('export interface StaticTypeGuards {')
staticGuards.forEach(append)
lines.push('}')

fs.writeFileSync('src/typeGuards.ts', lines.join('\n'))
